[{"/Users/oon/Documents/qr-code-clube-certo/src/index.js":"1","/Users/oon/Documents/qr-code-clube-certo/src/App.js":"2","/Users/oon/Documents/qr-code-clube-certo/src/helpers/fixDecode.js":"3","/Users/oon/Documents/qr-code-clube-certo/src/ExpiredToken.js":"4","/Users/oon/Documents/qr-code-clube-certo/src/helpers/cronometer.js":"5"},{"size":599,"mtime":1690575373402,"results":"6","hashOfConfig":"7"},{"size":5346,"mtime":1691183172126,"results":"8","hashOfConfig":"7"},{"size":242,"mtime":1690320604618,"results":"9","hashOfConfig":"7"},{"size":494,"mtime":1690393062940,"results":"10","hashOfConfig":"7"},{"size":230,"mtime":1690483394364,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"jeh2r1",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/oon/Documents/qr-code-clube-certo/src/index.js",[],[],"/Users/oon/Documents/qr-code-clube-certo/src/App.js",["30","31"],[],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport QRCode from \"react-qr-code\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport jwt_decode from 'jwt-decode';\n\nimport './App.css';\nimport { getTimeDiffInMinutes } from './helpers/cronometer';\n\nexport default function App() {\n\n  const { id, jwt } = useParams();\n  const navigate = useNavigate();\n\n  const [ price, setPrice ] = useState(null);\n  const [ qrCode, setQrCode ] = useState(null);\n  const [ logo, setLogo ] = useState(null);\n  const [ backgroundColor, setBackgroundColor ] = useState(null);\n  const [ userData, setUserData ] = useState(null);\n  const [ payed, setPayed ] = useState(null);\n  const [ expireTimeInMinutes, setExpireTimeInMinutes ] = useState(null);\n  const [ loading, setLoading ] = useState(false);\n  const [ intervalId, setIntervalId ] = useState(null);\n\n  const fetchData = () => {\n    if (payed === 'paid' || payed === 'expired') {\n      if (intervalId) clearInterval(intervalId);\n      return;\n    }\n    if (loading) return;\n    setLoading(true);\n\n    // Decode jwt\n    const decodedToken = jwt_decode(jwt);\n\n    // Fetch first API\n    // Fetch first API\n    axios.get(`https://node.clubecerto.com.br/superapp/pay/payment/status/${ id }`, { headers: { Authorization: `Bearer ${ jwt }` } })\n      .then((response) => {\n        // Update states first\n        setPrice(response.data.value);\n        setQrCode(response.data.qrCode);\n        setPayed(response.data.status);\n\n        // Convert string to Date\n        const expireAt = new Date(response.data.expireAt);\n        const now = new Date();\n\n        // If qrcode is expired\n        if (now > expireAt) {\n          navigate(\"/expired\");\n        }\n\n        // Setting user data here\n        setUserData({ ...decodedToken, expireAt: expireAt });\n\n        // Calculate and set expire time in minutes here\n        const remainingTime = getTimeDiffInMinutes({ date: expireAt });\n        setExpireTimeInMinutes(remainingTime);\n\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n\n\n    setLogo(decodedToken.selectedCompany.companiesImage.image);\n    setBackgroundColor(decodedToken.selectedCompany.companiesColor.backgroundColor);\n  };\n\n\n  const redirectUser = () => {\n    let url;\n\n    if (navigator.userAgent.match(/Android/i)) {\n      url = 'https://play.google.com/store/apps/details?id=com.devusama.clubecerto';  // Sua URL da Play Store\n    } else if (navigator.userAgent.match(/iPhone|iPad|iPod/i)) {\n      url = 'https://apps.apple.com/br/app/clube-certo/id1662239139';  // Sua URL da Apple Store\n    } else {\n      url = 'https://play.google.com/store/apps/details?id=com.devusama.clubecerto';  // Sua URL da Play Store na Web\n    }\n\n    window.location.href = url;\n  };\n\n  useEffect(() => {\n    if (payed === 'paid') {\n      if (window.confirm('Pagamento realizado com sucesso! Você será redirecionado.')) {\n        redirectUser();\n      }\n    }\n    if (payed === 'expired') {\n      navigate('/expired')\n    }\n  }, [ payed ]);\n\n\n  useEffect(() => {\n    const id = setInterval(() => {\n      fetchData();\n    }, 5000);\n    fetchData();\n    setIntervalId(id);\n\n    // Certifique-se de limpar o intervalo quando o componente for desmontado\n    return () => clearInterval(id);\n  }, []);\n\n  useEffect(() => {\n    const id = setInterval(() => {\n      if (userData && userData.expireAt) {\n        const remainingTime = getTimeDiffInMinutes({ date: userData.expireAt });\n\n        setExpireTimeInMinutes(remainingTime);\n      }\n    }, 60 * 1000); // Atualiza a cada 1 minuto\n\n    return () => clearInterval(id);\n  }, [ userData ]);\n\n\n  const copyCode = async (token) => {\n    try {\n      await navigator.clipboard.writeText(token);\n      toast.success(\"Código Copiado!\", {\n        position: \"bottom-center\",\n        autoClose: 2000,\n      });\n    } catch (err) {\n      console.error(\"Failed to copy text: \", err);\n    }\n  };\n\n  return (\n    <div className=\"main\">\n      <div className=\"header\" style={ { backgroundColor: backgroundColor } }>\n        <div className='image-container'>\n          <img src={ logo } alt=\"Logo\" className=\"logo\" />\n        </div>\n        <p className=\"instruction\">\n          Falta pouco! Escaneie o código QR pelo seu app de pagamentos ou Internet Banking\n        </p>\n      </div>\n      <div className=\"qr-section\">\n        { qrCode ? (\n          <QRCode\n            className='qr-code'\n            value={ qrCode }\n            viewBox={ `0 0 256 256` }\n          />\n        ) : (\n          <p>Carregando...</p>\n        ) }\n        <p className=\"qr-value\">R$ { price }</p>\n        <p className=\"small-text\">Se preferir, você pode pagá-lo copiando e colando o código abaixo:</p>\n        <p className=\"copy-paste-code\">{ qrCode }</p>\n\n        <button className=\"copy-btn\" onClick={ () => copyCode(qrCode) }>Copiar código</button>\n        <div style={ { marginTop: '-2vh', marginBottom: '2vh', fontFamily: 'roboto', fontSize: '5vw' } }>\n          Expira em { expireTimeInMinutes } min\n        </div>\n        <ToastContainer></ToastContainer>\n      </div>\n      <h1 style={ { textAlign: 'center', marginTop: '2rem' } }>Not Found</h1>\n    </div>\n  );\n}\n","/Users/oon/Documents/qr-code-clube-certo/src/helpers/fixDecode.js",[],[],[],"/Users/oon/Documents/qr-code-clube-certo/src/ExpiredToken.js",[],[],[],"/Users/oon/Documents/qr-code-clube-certo/src/helpers/cronometer.js",[],[],{"ruleId":"32","severity":1,"message":"33","line":100,"column":6,"nodeType":"34","endLine":100,"endColumn":15,"suggestions":"35"},{"ruleId":"32","severity":1,"message":"36","line":112,"column":6,"nodeType":"34","endLine":112,"endColumn":8,"suggestions":"37"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["38"],"React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["39"],{"desc":"40","fix":"41"},{"desc":"42","fix":"43"},"Update the dependencies array to be: [navigate, payed]",{"range":"44","text":"45"},"Update the dependencies array to be: [fetchData]",{"range":"46","text":"47"},[3185,3194],"[navigate, payed]",[3447,3449],"[fetchData]"]